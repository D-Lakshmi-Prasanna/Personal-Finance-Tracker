package com.example.finance.entity;

import java.util.Collection;
import java.util.List;

import org.springframework.security.core.GrantedAuthority;
import org.springframework.security.core.userdetails.UserDetails;

import com.example.finance.util.Role;

import jakarta.persistence.Entity;
import jakarta.persistence.EnumType;
import jakarta.persistence.Enumerated;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;

import lombok.Data;

/*
 * author: Prasanna
 * 
 * AuthUser is an entity representing a user in the system.
 * It implements the UserDetails interface to provide user authentication details.
 */
@Data
@Entity
public class AuthUser implements UserDetails {

    // Unique identifier for the user, auto-generated by the database
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;
    
    // User's email, used for login and communication
    private String email;
    
    // Username chosen by the user
    private String username;
    
    // Encrypted password for the user
    private String password;
    
    // Role of the user, representing their level of access
    @Enumerated(EnumType.STRING)
    private Role role;
	
    /*
     * author: Prasanna
     * 
     * Provides the roles of the user as authorities for Spring Security.
     * 
     * @return a collection of granted authorities
     */
    @Override
    public Collection<? extends GrantedAuthority> getAuthorities() {
        // Return the role with a "ROLE_" prefix
        return List.of(() -> "ROLE_" + role.name());
    }

    // getters and setters
}
